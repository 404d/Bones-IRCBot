[bot]
nickname = Bones
username = bones
realname = Bones IRC Bot
channel = #Gameshaft
    #Temporals
modules = bones.modules.Utilities

joinOnInvite = false

[server]
host = irc.gameshaft.net
port = 443
useSSL = true
setBot = false

[services]
;;
; To activate support for a service, add the module for the
; service to the modules settings of the [bot] section.
;;;
; NickServ module: bones.services.NickServ
;;
nickserv.password = IAmASkeleton
; Instead of sending a message to NickServ the moment the
; bot gets done with registering, wait for services to ask
; you about identifying with NickServ.
nickserv.waitForNotice = true

;;;
; HostServ module: bones.services.HostServ
;;
; This will prevent joining of channels until the bot have
; received a message from services explaining that the vhost
; have been activated.
hostserv.waitForHost = true

[module.qdb]
maxlinesperquote = 5

[module.UselessResponses]
; Time (in seconds) the dance trigger should require a user to wait
; between each time it is triggered in a channel.
dance.cooldown = 300

;;;
; Logger config
;;;
[loggers]
keys=root,bones
 
[handlers]
keys=fileHandler, consoleHandler
 
[formatters]
keys=bonesFormatter

[logger_root]
; Change the line below to DEBUG if you are having problems with the bot,
; or if you are developing a module as it will help you understand
; what is going on.
level=INFO
handlers=consoleHandler

[logger_bones]
handlers=fileHandler
qualname=bones
 
[handler_consoleHandler]
class=StreamHandler
formatter=bonesFormatter
args=(sys.stdout,)
; The following line reduces console spam by only showing warnings or higher.
; It is recommended to uncomment the following line in production systems.
;level=WARNING
 
[handler_fileHandler]
class=FileHandler
formatter=bonesFormatter
args=("bones.log",)

[formatter_bonesFormatter]
format=%(asctime)s - %(name)s - %(levelname)s - %(message)s
datefmt=
